rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if a user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if a user is an approved member or admin
    function isApprovedUser() {
      return request.auth != null &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.status == 'approved';
    }

    // Users collection rules
    match /users/{userId} {
      // Admins can manage all user documents
      allow read, write, delete: if isAdmin();
      // An authenticated user can read and update their own profile
      allow get, update: if request.auth.uid == userId;
      // Anyone can create their own user document (for signup)
      allow create: if request.auth.uid == userId;
    }

    // Events collection rules
    match /events/{eventId} {
      // Anyone can read events (for member and visitor pages)
      allow get, list: if true;
      // Only admins can create, update, or delete events
      allow write: if isAdmin();
    }

    // Attendance collection rules
    match /attendance/{attendanceId} {
      // Anyone can create an attendance record (for visitors and members)
      // Additional checks happen in the frontend/backend logic
      allow create: if true;
      // Admins can read all attendance records
      allow read: if isAdmin();
      // Users can read their own attendance records
      allow get: if isApprovedUser() && get(/databases/$(database)/documents/attendance/$(attendanceId)).data.userId == request.auth.uid;
    }
    
    // Project Ideas collection rules
    match /projectIdeas/{ideaId} {
      // Only the author or an admin can read/write
      allow read, write: if request.auth != null && (get(/databases/$(database)/documents/projectIdeas/$(ideaId)).data.authorId == request.auth.uid || isAdmin());
      // Authenticated users can create ideas
      allow create: if isApprovedUser();
    }

    // Communication Groups collection rules
    match /communicationGroups/{groupId} {
      allow read, write, delete: if isAdmin();
    }
  }
}
