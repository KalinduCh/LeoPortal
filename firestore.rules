rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'super_admin';
    }
    
    function isAdmin() {
      let userRole = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
      return userRole == 'admin' || userRole == 'super_admin';
    }

    function isMember() {
        return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.status == 'approved';
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Collection: users
    match /users/{userId} {
      // Admins can list all users, members can only read their own profile.
      allow list: if isAdmin();
      allow get: if isMember();
      
      allow create: if request.auth != null; // For signup
      allow update: if isAdmin() || isOwner(userId);
      allow delete: if isAdmin();
    }
    
    // Collection: events
    match /events/{eventId} {
      allow read: if isMember();
      allow write: if isAdmin();
    }
    
    // Collection: attendance
    match /attendance/{attendanceId} {
        // Members can read their own attendance, Admins can read all.
        allow read: if isAdmin() || (isMember() && resource.data.userId == request.auth.uid);
        allow create: if request.auth != null || request.auth == null; // Allow logged in and visitors
        // Only admins can update/delete attendance records
        allow update, delete: if isAdmin();
    }
    
    // Collection: documents (if you re-add it)
    match /documents/{documentId} {
      allow read, write: if isAdmin();
    }

    // Collection: communicationGroups
    match /communicationGroups/{groupId} {
        allow read, write: if isAdmin();
    }
    
    // Collection: projectIdeas
    match /projectIdeas/{ideaId} {
        allow read: if isMember();
        allow create: if isMember();
        allow update: if isAdmin() || (isMember() && resource.data.authorId == request.auth.uid);
        allow delete: if isAdmin() || (isMember() && resource.data.authorId == request.auth.uid);
    }
    
    // Collection: transactions
    match /transactions/{transactionId} {
        allow read, write: if isAdmin();
    }

    // Collection: pointsEntries
    match /pointsEntries/{entryId} {
        allow read: if isMember(); // Allow all members to read points for leaderboards
        allow write: if isAdmin(); // Only admins can create, update, or delete points
    }
  }
}
