
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      // Allow anyone to create a user document (for signup)
      // The status will be 'pending' by default, controlled by backend logic
      allow create: if true;
      
      // Any authenticated user can read any user's profile (for member lists, etc.)
      allow read: if request.auth != null;
      
      // Update rules:
      // - Admins can update any field on any user document.
      // - A user can update their OWN document, but cannot change their role, status, or fee details.
      allow update: if isAdmin() || 
                      (isOwner(userId) && 
                       !('role' in request.resource.data) && 
                       !('status' in request.resource.data) &&
                       !('membershipFeeStatus' in request.resource.data) &&
                       !('membershipFeeAmountPaid' in request.resource.data)
                      );
      
      // Admins can delete any user
      allow delete: if isAdmin();
    }

    match /events/{eventId} {
      // Allow anyone (including unauthenticated visitors) to see event details
      allow read: if true;
      
      // Only admins can create, update, or delete events
      allow create, update, delete: if isAdmin();
    }

    match /attendance/{attendanceId} {
        // Anyone can create an attendance record (for both members and visitors).
        // This is secure because they can't read/modify other records.
        allow create: if true;
        
        // Only admins can read the full list of attendance records for reports.
        // Members read their own records via a different, more specific query handled in app logic.
        allow read, update, delete: if isAdmin();
    }
    
    match /communicationGroups/{groupId} {
        // Only admins can manage communication groups
        allow read, create, update, delete: if isAdmin();
    }

    match /projectIdeas/{ideaId} {
        // - Anyone authenticated can create an idea.
        // - The author or an admin can update an idea.
        // - The author or an admin can read an idea.
        // - The author or an admin can delete an idea.
        allow create: if request.auth != null;
        allow read, update, delete: if isOwner(resource.data.authorId) || isAdmin();
    }
    
    match /transactions/{transactionId} {
        // Only admins can manage financial transactions
        allow read, create, update, delete: if isAdmin();
    }
  }
}
