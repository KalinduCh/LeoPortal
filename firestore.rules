rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // ANYONE can create their own user profile (on signup)
      allow create: if request.auth != null;

      // ANY authenticated user can read their OWN profile
      // ONLY an ADMIN can read other users' profiles
      allow read: if request.auth != null && 
                  (request.auth.uid == userId || isAdmin(request.auth.uid));
                  
      // ONLY authenticated users can update their OWN profile
      // OR an ADMIN can update ANY user's profile
      allow update: if request.auth != null && 
                    (request.auth.uid == userId || isAdmin(request.auth.uid));

      // ONLY an ADMIN can delete a user profile
      allow delete: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    // Rules for the 'events' collection
    match /events/{eventId} {
      // ONLY an ADMIN can create, update, or delete events
      allow create, update, delete: if request.auth != null && isAdmin(request.auth.uid);
      
      // ANY authenticated user can read events
      allow read: if request.auth != null;
    }

    // Rules for the 'attendance' collection
    match /attendance/{attendanceId} {
        // ANYONE (including unauthenticated visitors) can create an attendance record
        allow create: if true;

        // ONLY an ADMIN can read the full attendance log
        // Authenticated members can read their OWN attendance records
        allow read: if request.auth != null && 
                    (isAdmin(request.auth.uid) || resource.data.userId == request.auth.uid);
        
        // No one can update or delete attendance records to maintain data integrity
        allow update, delete: if false;
    }
    
    // Rules for project ideas
    match /projectIdeas/{ideaId} {
        // Any authenticated user can create a project idea
        allow create: if request.auth != null;

        // The author of the idea can read and update it
        // An admin can read, update, and delete any idea
        allow read, update: if request.auth != null && 
                          (resource.data.authorId == request.auth.uid || isAdmin(request.auth.uid));
        
        // The author or an admin can delete it
        allow delete: if request.auth != null && 
                     (resource.data.authorId == request.auth.uid || isAdmin(request.auth.uid));
    }
    
    // Rules for communication groups
    match /communicationGroups/{groupId} {
        // Only admins can create, update, read, or delete groups
        allow read, write: if request.auth != null && isAdmin(request.auth.uid);
    }
  }
}
