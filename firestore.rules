
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Secure the users collection
    match /users/{userId} {
      // Admins can read/write any user profile
      // Authenticated users can read/write their own profile
      allow read, write: if isAdmin() || request.auth.uid == userId;
      // Allow creation of a user profile only if authenticated (part of signup flow)
      allow create: if request.auth != null;
    }

    // Secure the events collection
    match /events/{eventId} {
      // Admins can create, update, delete events
      allow write: if isAdmin();
      // Any authenticated user can read events
      allow read: if request.auth != null;
    }

    // Secure the attendance collection
    match /attendance/{attendanceId} {
      // Admins can read all attendance records
      allow read: if isAdmin();
      // Any authenticated user can create an attendance record for themselves
      allow create: if request.auth != null;
      // Users should not be able to update or delete their attendance
      allow update, delete: if false;
    }
    
    // NEW: Secure the projectIdeas collection
    match /projectIdeas/{ideaId} {
      // Read:
      // - Admins can read any proposal.
      // - The author of the proposal can read it.
      allow read: if isAdmin() || request.auth.uid == resource.data.authorId;

      // Create:
      // - An authenticated user can create a proposal if they are the author.
      allow create: if request.auth.uid == request.resource.data.authorId;
      
      // Update, Delete:
      // - Admins can update/delete any proposal (for status changes, etc.).
      // - The author can update/delete their own proposal (e.g., saving drafts, deleting drafts).
      allow update, delete: if isAdmin() || request.auth.uid == resource.data.authorId;
    }
  }
}
