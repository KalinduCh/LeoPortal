
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/update their own profile, admins can read/update any.
    match /users/{userId} {
      allow read, update: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create: if request.auth != null; // New users can create their own profile on signup
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Events can be read by any authenticated user, but only created/updated/deleted by admins.
    match /events/{eventId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Attendance can be read by admins. Users can create their own attendance, and read their own.
    match /attendance/{attendanceId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create: if request.auth != null; // Any authenticated user (member or visitor) can mark attendance
    }

    // Project Ideas
    match /projectIdeas/{ideaId} {
      // Create: Any authenticated user can create a project idea.
      allow create: if request.auth != null;
      
      // Read: Users can read their own ideas. Admins can read any idea.
      allow read: if request.auth != null && (resource.data.authorId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');

      // Update: Users can update their own ideas. Admins can update any idea (e.g., to change status).
      allow update: if request.auth != null && (resource.data.authorId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');

      // Delete: Only admins should be able to delete proposals.
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
